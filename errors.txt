graph.c: In function ‘graph_create’:
graph.c:106:27: warning: comparison between pointer and integer [enabled by default]
                 if ((str2 != '\n') && (str2 != '\0')){
                           ^
graph.c: In function ‘create_adjacency_matrix’:
graph.c:231:24: warning: comparison between pointer and integer [enabled by default]
              if ((str2 != '\n') && (str2 != '\0') && (strcmp("n",str2) != 0)){
                        ^
zuchis@ShitCumLoadOfFuck:~/Desktop/graphs_theory$ fg
vim main.c

[1]+  Stopped                 vim main.c
zuchis@ShitCumLoadOfFuck:~/Desktop/graphs_theory$ gcc -o exe main.c graph.c
zuchis@ShitCumLoadOfFuck:~/Desktop/graphs_theory$ ./exe
Segmentation fault (core dumped)
zuchis@ShitCumLoadOfFuck:~/Desktop/graphs_theory$ gcc -Wall -o exe main.c graph.c
main.c: In function ‘main’:
main.c:7:19: warning: unused variable ‘list’ [-Wunused-variable]
     _list_header *list = graph_create();
                   ^
graph.c: In function ‘graph_create’:
graph.c:95:36: warning: comparison with string literal results in unspecified behavior [-Waddress]
         if (fgets(str,500,entrada) != "\n"){ //Esta parte do c�digo pega linha por linha para analisar todas as adjac�ncias do grafo
                                    ^
graph.c:90:22: warning: variable ‘i’ set but not used [-Wunused-but-set-variable]
     int u, no_nodes, i, degree_counter = 0;
                      ^
graph.c:90:12: warning: variable ‘no_nodes’ set but not used [-Wunused-but-set-variable]
     int u, no_nodes, i, degree_counter = 0;
            ^
graph.c: In function ‘create_adjacency_matrix’:
graph.c:226:33: warning: comparison with string literal results in unspecified behavior [-Waddress]
      if (fgets(str,500,entrada) != "\n"){ //Esta parte do c�digo pega linha por linha para analisar todas as adjac�ncias do grafo
                                 ^
graph.c:204:7: warning: unused variable ‘tipo’ [-Wunused-variable]
  char tipo;
       ^
graph.c: In function ‘dfs_header’:
graph.c:249:27: warning: ‘i’ is used uninitialized in this function [-Wuninitialized]
  int *reach = (int*)malloc(i*sizeof(int));

